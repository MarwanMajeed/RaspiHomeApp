package raspihomeapp;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import java.util.Locale;
import javax.swing.JFrame;
import javax.swing.JRootPane;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author rossmann
 */
public class MainForm extends javax.swing.JFrame {

    private Color gold = new Color(220, 185, 50);
    private int xM = 220, yM = 220;
    private int hour, minute, second;
    private int xCoordM[] = new int[5];
    private int yCoordM[] = new int[5];
    private int xCoordS[] = new int[5];
    private int yCoordS[] = new int[5];
    private Timer timer;
    private Graphics Gg;
    private int xSek = 0;
    private int ySek = 0;
    private int xStd = 0;
    private int yStd = 0;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
         
        timer = new Timer(1000, taskPerformer);
        timer.setInitialDelay(0);
        timer.start();
    }

    ActionListener taskPerformer = new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            timeractionPerformed(evt);
        }
    };

    public void timeractionPerformed(final ActionEvent e) {
        GregorianCalendar heute = new GregorianCalendar(Locale.GERMANY);
        heute.setTimeZone(TimeZone.getTimeZone("Europe/Berlin"));
        hour = heute.get(Calendar.HOUR_OF_DAY);
        minute = heute.get(Calendar.MINUTE);
        second = heute.get(Calendar.SECOND);

        Gg = jPanel2.getGraphics();
        //jPanel2.paint(Gg);
        drawClock(Gg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setIconImages(null);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 480));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 255, 51));
        jLabel2.setText("RS Home V 1.2");

        jButton2.setBackground(new java.awt.Color(255, 255, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/info.png"))); // NOI18N
        jButton2.setText("Schalter");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.setIconTextGap(0);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton4.setText("Solar ");
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.setInheritsPopupMenu(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton5.setText("Einstellung");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 423, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
        );

        jButton3.setBackground(new java.awt.Color(0, 0, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(204, 255, 204));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/undo.png"))); // NOI18N
        jButton3.setText("zur√ºck");
        jButton3.setIconTextGap(40);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 398, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(367, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(19, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(800, 480));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void drawClock(final Graphics g) {
        //Zifferblatt:
        for (int i = 0; i <= 8; i++) {
            if (i < 5 | i > 6) {
                g.setColor(Color.GREEN);
            } else {
                g.setColor(Color.red);
            }
           // g.drawOval(xM - 140 + i, yM - 140 + i, 280 - 2 * i, 280 - 2 * i);
            g.drawOval(xM - 200 + i, yM - 200 + i, 400 - 2 * i, 400 - 2 * i);
        }
        //Stunden Marken:
        g.setFont(new Font("Verdana", 0, 20));
        g.setColor(Color.red);
        for (int i = 1; i <= 12; i++) {
            double xAbstand = 180 * Math.cos(Math.PI / 2 - i * Math.PI / 6);
            double yAbstand = 180 * Math.sin(Math.PI / 2 - i * Math.PI / 6);
            int x = xM + (int) xAbstand;
            int y = yM - (int) yAbstand;
            xStd = x - 5;
            yStd = y + 5;
            
            g.drawString("" + i, xStd, yStd);
        }
        //Stunden Zeiger:
        g.setColor(Color.BLACK);
        g.fillPolygon(xCoordS, yCoordS, 5);
        g.fillPolygon(xCoordM, yCoordM, 4);

        double schritt = minute * Math.PI / 360;
        double winkel = hour * Math.PI / 6 + schritt;
        int xiR = xM + (int) (4 * Math.cos(-winkel));
        int yiR = yM - (int) (4 * Math.sin(-winkel));
        int xaR = xiR + (int) (90 * Math.cos(Math.PI / 2 - winkel));
        int yaR = yiR - (int) (90 * Math.sin(Math.PI / 2 - winkel));
        int xs = xM + (int) (150 * Math.cos(Math.PI / 2 - winkel));
        int ys = yM - (int) (150 * Math.sin(Math.PI / 2 - winkel));
        int xaL = xaR + (int) (8 * Math.cos(Math.PI - winkel));
        int yaL = yaR - (int) (8 * Math.sin(Math.PI - winkel));
        int xiL = xaL + (int) (90 * Math.cos(3 * Math.PI / 2 - winkel));
        int yiL = yaL - (int) (90 * Math.sin(3 * Math.PI / 2 - winkel));
        xCoordS[0] = xiR;
        xCoordS[1] = xaR;
        xCoordS[2] = xs;
        xCoordS[3] = xaL;
        xCoordS[4] = xiL;
        yCoordS[0] = yiR;
        yCoordS[1] = yaR;
        yCoordS[2] = ys;
        yCoordS[3] = yaL;
        yCoordS[4] = yiL;
        g.setColor(Color.blue);
        g.fillPolygon(xCoordS, yCoordS, 5);
        g.fillOval(xM - 15, yM - 15, 30, 30);
        //Minuten Zeiger:
        schritt = minute * Math.PI / 30;
        xiR = xM + (int) (3 * Math.cos(-schritt));
        yiR = yM - (int) (3 * Math.sin(-schritt));
        xaR = xiR + (int) (182 * Math.cos(Math.PI / 2 - schritt));
        yaR = yiR - (int) (182 * Math.sin(Math.PI / 2 - schritt));
        xaL = xaR + (int) (6 * Math.cos(Math.PI - schritt));
        yaL = yaR - (int) (6 * Math.sin(Math.PI - schritt));
        xiL = xaL + (int) (182 * Math.cos(3 * Math.PI / 2 - schritt));
        yiL = yaL - (int) (182 * Math.sin(3 * Math.PI / 2 - schritt));
        xCoordM[0] = xiR;
        xCoordM[1] = xaR;
        xCoordM[2] = xaL;
        xCoordM[3] = xiL;
        yCoordM[0] = yiR;
        yCoordM[1] = yaR;
        yCoordM[2] = yaL;
        yCoordM[3] = yiL;
        g.fillPolygon(xCoordM, yCoordM, 4);
        //Sekunden Zeiger:
        g.setColor(Color.BLACK);
        g.drawLine(xM, yM, xSek, ySek);
        
        schritt = second * Math.PI / 30;
        xSek = xM + (int) (155 * Math.cos(Math.PI / 2 - schritt));
        ySek = yM - (int) (155 * Math.sin(Math.PI / 2 - schritt));
        g.setColor(Color.red);
        g.drawLine(xM, yM, xSek, ySek);
        g.fillOval(xM - 6, yM - 6, 12, 12);
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Ketegorien frame = new Ketegorien();
        frame.dispose();
        frame.setUndecorated(true);
        frame.setVisible(true);
        

// TODO add your handling code here:
//        Form1 frame = new Form1();
// 
//                
//                frame.dispose();
//                frame.setUndecorated(true);
//                
//                    frame.setVisible(true);
//         

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        ParamForm frame = new ParamForm();
       frame.dispose();
                frame.setUndecorated(true);
                
                    frame.setVisible(true);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        Bereiche frame = new Bereiche();
       frame.dispose();
                frame.setUndecorated(true);
                
                    frame.setVisible(true);

       
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                MainForm frame = new MainForm();
                
                frame.dispose();
                frame.setUndecorated(true);
                //frame.getRootPane().setWindowDecorationStyle(JRootPane.NONE);
                    frame.setVisible(true);
                
                
               // new MainForm().setVisible(true);
                    
                    
                    
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
